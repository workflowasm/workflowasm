syntax = "proto3";

package workflowasm.lang.v1;

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

// Short integral codes for the WorkflowASM value types.
//
// NB: These must match exactly with the
// `oneof` field numbers in the `workflowasm.lang.v1.Value` message
// type. (Except for `TYPE_UNKNOWN` which has no corresponding values)
enum Type {
  TYPE_UNKNOWN = 0;
  TYPE_NULL = 1;
  TYPE_BOOL = 2;
  TYPE_INT64 = 3;
  TYPE_UINT64 = 4;
  TYPE_DOUBLE = 5;
  TYPE_STRING = 6;
  TYPE_BYTES = 7;
  TYPE_ENUM = 8;
  TYPE_OBJECT = 9;
  TYPE_MAP = 10;
  TYPE_LIST = 11;
  TYPE_TYPE = 12;
  TYPE_CALLABLE = 13;
}

// Short integral codes for the species of callables that can be stored
// as values within the VM.
enum CallableType {
  CALLABLE_TYPE_UNKNOWN = 0;
  CALLABLE_TYPE_NATIVE = 1;
  CALLABLE_TYPE_FUNCTION = 2;
  CALLABLE_TYPE_CLOSURE = 3;
}

// A fully resolved value
message Value {
  oneof kind {
    // Null value.
    google.protobuf.NullValue null_value = 1;

    // Boolean value.
    bool bool_value = 2;

    // Signed integer value.
    int64 int64_value = 3;

    // Unsigned integer value.
    uint64 uint64_value = 4;

    // Floating point value.
    double double_value = 5;

    // UTF-8 string value.
    string string_value = 6;

    // Byte string value.
    bytes bytes_value = 7;

    // An enum value.
    EnumValue enum_value = 8; 

    // The proto message backing an object value.
    google.protobuf.Any message_value = 9;

    // Map value.
    MapValue map_value = 10;

    // List value.
    ListValue list_value = 11;

    // Type value.
    string type_value = 12;

    // Closure value
    ClosureValue closure_value = 13;

    // Indirect heap value
    int32 heap_value = 14;
  }
}

// An enum value.
message EnumValue {
  // The fully qualified name of the enum protobuf type.
  string type = 1;

  // The value of the enum.
  int32 value = 2;
}

// A list.
//
// Wrapped in a message so 'not set' and empty can be differentiated, which is
// required for use in a 'oneof'.
message ListValue {
  // The ordered values in the list.
  repeated Value values = 1;
}

// A map.
//
// Wrapped in a message so 'not set' and empty can be differentiated, which is
// required for use in a 'oneof'.
message MapValue {
  message Entry {
    // The key.
    //
    // Must be unique with in the map.
    // Currently only boolean, int, uint, and string values can be keys.
    Value key = 1;

    // The value.
    Value value = 2;
  }

  // The set of map entries.
  //
  // CEL has fewer restrictions on keys, so a protobuf map representation
  // cannot be used.
  repeated Entry entries = 1;
}

// A closure over a function.
message ClosureValue {
  // A string identifying the code for the function that was closed over
  string function = 1;

  // State of captured closure variables, stored by id. If empty, no variables
  // were captured by the closure.
  string closure_id = 2;
}
